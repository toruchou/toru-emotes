--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Protected by LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Toru 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v89=v5(v82,v19);v19=nil;return v89;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-(2 -(878 -(282 + 595))))))%((3 -1)^(((v33-1) -(v32-(2 -1))) + (620 -((2192 -(1523 + 114)) + 64)))) ;return v83-(v83%(932 -(857 + 74))) ;else local v84=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=1065 -((162 -94) + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==(1271 -(226 + 1044))) then return (v41 * 16777216) + (v40 * (285370 -219834)) + (v39 * 256) + v38 ;end if (v37==(117 -(32 + (157 -72)))) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;v37=958 -((1637 -745) + (415 -(87 + 263))) ;end end end local function v24() local v42=v23();local v43=v23();local v44=181 -(67 + 113 + 0) ;local v45=(v20(v43,1,20) * (2^(24 + 8))) + v42 ;local v46=v20(v43,51 -30 ,23 + 8 );local v47=((v20(v43,32)==(792 -(368 + 423))) and  -(3 -(6 -4))) or (953 -((820 -(10 + 8)) + 150)) ;if (v46==(0 -0)) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else local v90=997 -(915 + 82) ;while true do if (v90==(0 -0)) then v46=1;v44=0;break;end end end elseif (v46==(1193 + 854)) then return ((v45==(0 -0)) and (v47 * ((1188 -(1069 + (453 -335)))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(2237 -1214) ) * (v44 + (v45/((1 + 1)^(92 -40)))) ;end local function v25(v48) local v49;if  not v48 then local v85=442 -(416 + (456 -(44 + 386))) ;while true do if (v85==(0 -0)) then v48=v23();if (v48==(0 + 0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 -0) );v18=v18 + v48 ;local v50={};for v65=439 -(145 + 293) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 241 -(187 + 54) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if (v67~=(1 -0)) then else if (v51==(1262 -(1091 + 171))) then local v95=(function() return 0 + 0 ;end)();while true do if (0~=v95) then else v52=(function() return function(v110,v111,v112) local v113=(function() return 0 -0 ;end)();local v114=(function() return;end)();while true do if (v113==0) then v114=(function() return 0 -0 ;end)();while true do if (v114==(374 -(123 + 251))) then local v301=(function() return 0;end)();while true do if (v301~=0) then else v110[v111-#"!" ]=(function() return v112();end)();return v110,v111,v112;end end end end break;end end end;end)();v53=(function() return {};end)();v95=(function() return 1 -0 ;end)();end if (v95~=(1 -0)) then else v54=(function() return {};end)();v55=(function() return {};end)();v95=(function() return 9 -7 ;end)();end if (v95==(1638 -(1373 + 263))) then v51=(function() return 1001 -(451 + 549) ;end)();break;end end end break;end if (v67==(0 + 0)) then if ((699 -(208 + 490))==v51) then local v96=(function() return 0 + 0 ;end)();while true do if (v96==(1 + 0)) then v58=(function() return {};end)();for v105= #"[",v57 do local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==(837 -(660 + 176))) then v109=(function() return nil;end)();while true do if (v107==(0 + 0)) then local v263=(function() return 0 -0 ;end)();while true do if (v263==0) then v108=(function() return v21();end)();v109=(function() return nil;end)();v263=(function() return 1;end)();end if (v263~=(1 + 0)) then else v107=(function() return 203 -(14 + 188) ;end)();break;end end end if ((676 -(534 + 141))==v107) then if (v108== #",") then v109=(function() return v21()~=(0 + 0) ;end)();elseif (v108==(2 + 0)) then v109=(function() return v24();end)();elseif (v108~= #"gha") then else v109=(function() return v25();end)();end v58[v105]=(function() return v109;end)();break;end end break;end if (v106==(0 + 0)) then v107=(function() return 0 -0 ;end)();v108=(function() return nil;end)();v106=(function() return 1 -0 ;end)();end end end v96=(function() return 5 -3 ;end)();end if (v96==2) then v51=(function() return 562 -(306 + 254) ;end)();break;end if ((0 + 0)==v96) then v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v96=(function() return 1 + 0 ;end)();end end end if (v51==(2 + 0)) then v56[ #"gha"]=(function() return v21();end)();for v98= #" ",v23() do local v99=(function() return v21();end)();if (v20(v99, #"!", #"!")==(396 -(115 + 281))) then local v101=(function() return 1467 -(899 + 568) ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if (v101==(2 -1)) then v104=(function() return {v22(),v22(),nil,nil};end)();if (v102==(0 -0)) then local v117=(function() return 0 -0 ;end)();local v118=(function() return;end)();while true do if (v117==(0 -0)) then v118=(function() return 603 -(268 + 335) ;end)();while true do if (v118~=(867 -(550 + 317))) then else v104[ #"19("]=(function() return v22();end)();v104[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v102== #",") then v104[ #"91("]=(function() return v23();end)();elseif (v102==2) then v104[ #"xnx"]=(function() return v23() -(2^(588 -(426 + 146))) ;end)();elseif (v102== #"asd") then local v344=(function() return 0;end)();local v345=(function() return;end)();while true do if (v344~=(0 -0)) then else v345=(function() return 0 -0 ;end)();while true do if (v345==(0 -0)) then v104[ #"-19"]=(function() return v23() -((287 -(134 + 151))^(46 -30)) ;end)();v104[ #"0836"]=(function() return v22();end)();break;end end break;end end end v101=(function() return 2;end)();end if (v101~=(0 + 0)) then else local v115=(function() return 0;end)();while true do if (0==v115) then v102=(function() return v20(v99,2, #"xnx");end)();v103=(function() return v20(v99, #"http",6);end)();v115=(function() return 1666 -(970 + 695) ;end)();end if (v115==1) then v101=(function() return 1 -0 ;end)();break;end end end if (2==v101) then if (v20(v103, #"\\", #"~")== #"{") then v104[1992 -(582 + 1408) ]=(function() return v58[v104[6 -4 ]];end)();end if (v20(v103,2 -0 ,7 -5 )~= #"~") then else v104[ #"xxx"]=(function() return v58[v104[ #"-19"]];end)();end v101=(function() return 1827 -(1195 + 629) ;end)();end if (v101==3) then if (v20(v103, #"91(", #"gha")~= #"[") then else v104[ #"asd1"]=(function() return v58[v104[ #"?id="]];end)();end v53[v98]=(function() return v104;end)();break;end end end end for v100= #"|",v23() do v54,v100,v28=(function() return v52(v54,v100,v28);end)();end return v56;end v67=(function() return 1 -0 ;end)();end end end end local function v29(v59,v60,v61) local v62=v59[701 -(271 + 429) ];local v63=v59[2];local v64=v59[3 + 0 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1501 -((2411 -1003) + 92) ;local v73= -(1087 -(461 + (1781 -(1074 + 82))));local v74={};local v75={...};local v76=v12("#",...) -(1 + (0 -0)) ;local v77={};local v78={};for v86=1171 -(418 + 753) ,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + (1785 -(214 + 1570)) ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if ((57<=2723) and (v81<=33)) then if (v81<=16) then if ((v81<=(1 + 6)) or (2070==443)) then if ((v81<=(1 + 2)) or (2705==1393)) then if ((v81<=1) or (4601<61)) then if (v81==(0 + (1455 -(990 + 465)))) then local v122=v80[2];local v123=v80[533 -(406 + 123) ];local v124=v122 + (1771 -(1749 + 20)) ;local v125={v78[v122](v78[v122 + (1323 -(1249 + 73)) ],v78[v124])};for v227=1 + 0 ,v123 do v78[v124 + v227 ]=v125[v227];end local v126=v125[1 + 0 ];if v126 then v78[v124]=v126;v72=v80[1148 -(466 + 679) ];else v72=v72 + (2 -(1 + 0)) ;end else local v127=v80[(19 -14) -3 ];local v128=v78[v80[1903 -(106 + 1794) ]];v78[v127 + 1 + 0 ]=v128;v78[v127]=v128[v80[4]];end elseif (v81==(1 + 1)) then local v132=v80[2];v78[v132]=v78[v132](v78[v132 + (2 -1) ]);else for v230=v80[5 -3 ],v80[117 -((1730 -(1668 + 58)) + 110) ] do v78[v230]=nil;end end elseif (v81<=(589 -(57 + 527))) then if (v81==(1431 -(41 + 1386))) then if (v78[v80[105 -(17 + (712 -(512 + 114))) ]]~=v78[v80[3 + 1 ]]) then v72=v72 + 1 ;else v72=v80[3];end else local v134=v80[2];v78[v134](v78[v134 + (1 -0) ]);end elseif ((v81==(17 -11)) or (1390>=4744)) then local v135=166 -(122 + 44) ;local v136;while true do if (v135==(0 -0)) then v136=v80[2];v78[v136](v78[v136 + 1 ]);break;end end else local v137=v80[6 -4 ];local v138=v80[4 + 0 ];local v139=v137 + 2 ;local v140={v78[v137](v78[v137 + (1 -0) ],v78[v139])};for v232=1,v138 do v78[v139 + v232 ]=v140[v232];end local v141=v140[66 -(30 + 35) ];if v141 then local v269=0 + 0 ;while true do if (v269==(1257 -(1043 + 214))) then v78[v139]=v141;v72=v80[11 -(20 -12) ];break;end end else v72=v72 + (1213 -((667 -344) + 889)) ;end end elseif (v81<=(29 -18)) then if (v81<=(589 -(361 + 219))) then if (v81>8) then local v142=0 -0 ;local v143;local v144;local v145;while true do if (v142==(321 -(53 + 267))) then v145=0 + 0 ;for v313=v143,v80[4] do v145=v145 + 1 ;v78[v313]=v144[v145];end break;end if (((413 -(15 + 398))==v142) or (2003>3834)) then v143=v80[984 -(18 + 964) ];v144={v78[v143](v13(v78,v143 + (3 -2) ,v73))};v142=1 + 0 ;end end else local v146=v80[1 + 1 + 1 ];local v147=v78[v146];for v235=v146 + (851 -(20 + 156 + 674)) ,v80[4] do v147=v147   .. v78[v235] ;end v78[v80[2 + 0 ]]=v147;end elseif (v81==(136 -(116 + 10))) then v78[v80[1 + 1 ]]=v60[v80[741 -(542 + 171 + 25) ]];else local v151=0 -0 ;local v152;local v153;local v154;while true do if ((v151==(1 + 1)) or (156>3913)) then for v316=1,v80[3 + 1 ] do v72=v72 + 1 + 0 ;local v317=v68[v72];if (v317[1]==(39 -24)) then v154[v316-1 ]={v78,v317[1997 -(109 + 1885) ]};else v154[v316-1 ]={v60,v317[11 -8 ]};end v77[ #v77 + ((2150 -1028) -(118 + 1003)) ]=v154;end v78[v80[(820 -(98 + 717)) -3 ]]=v29(v152,v153,v61);break;end if (v151==(378 -((968 -(802 + 24)) + 235))) then v154={};v153=v10({},{__index=function(v319,v320) local v321=0;local v322;while true do if (v321==(0 -0)) then v322=v154[v320];return v322[1 + 0 ][v322[979 -(553 + 424) ]];end end end,__newindex=function(v323,v324,v325) local v326=v154[v324];v326[1 -0 ][v326[2]]=v325;end});v151=1 + 1 + 0 ;end if ((195==195) and (v151==(0 + 0))) then v152=v69[v80[2 + 1 + 0 ]];v153=nil;v151=1 + 0 + 0 ;end end end elseif (v81<=(8 + 5)) then if (v81==(3 + 9)) then v78[v80[2]]=v78[v80[6 -3 ]];else v78[v80[5 -3 ]][v80[6 -3 ]]=v80[2 + 2 ];end elseif (v81<=(67 -(147 -94))) then local v159=v80[755 -(239 + 514) ];local v160=v78[v80[3]];v78[v159 + 1 ]=v160;v78[v159]=v160[v80[4]];elseif (v81>(6 + 9)) then v78[v80[1331 -(797 + 532) ]]=v29(v69[v80[3 + 0 ]],nil,v61);else v78[v80[(3 -2) + 1 ]]=v78[v80[6 -3 ]];end elseif (v81<=(1226 -(134 + 239 + 829))) then if (v81<=(751 -(476 + 104 + 151))) then if (v81<=18) then if ((3105>=1796) and (v81==(1147 -(369 + 628 + 133)))) then local v164=v80[2 + 0 ];v78[v164](v13(v78,v164 + (1 -0) ,v73));else v78[v80[3 -1 ]]=v60[v80[241 -(64 + 174) ]];end elseif (v81==(3 + 16)) then v78[v80[2]]= #v78[v80[3]];else v78[v80[2 -0 ]]=v80[3]~=(336 -(144 + 140 + 52)) ;end elseif (v81<=(11 + 11)) then if ((4379>=2131) and (v81>(237 -(42 + 174)))) then local v169=(1433 -(797 + 636)) + 0 ;local v170;while true do if ((3844>=2043) and (v169==(0 + 0))) then v170=v80[1 + 1 ];v78[v170](v13(v78,v170 + 1 ,v73));break;end end elseif v78[v80[1506 -(363 + 1141) ]] then v72=v72 + ((7676 -6095) -(1183 + 397)) ;else v72=v80[(1627 -(1427 + 192)) -5 ];end elseif (v81==(17 + 6)) then v78[v80[2 + 0 ]][v80[1978 -(1913 + 62) ]]=v78[v80[3 + 1 ]];else local v173=v80[1 + 1 ];v78[v173]=v78[v173](v13(v78,v173 + (2 -(2 -1)) ,v80[1936 -(508 + 57 + 1368) ]));end elseif (v81<=(105 -77)) then if (v81<=26) then if (v81>25) then if (v80[1663 -(1477 + 184) ]==v78[v80[5 -1 ]]) then v72=v72 + 1 + 0 ;else v72=v80[(390 + 469) -(564 + 292) ];end else v72=v80[4 -1 ];end elseif ((v81==(81 -(380 -(192 + 134)))) or (3232<=2731)) then local v176=304 -((1520 -(316 + 960)) + 60) ;local v177;local v178;local v179;while true do if (v176==(1 + 0)) then v179=476 -(41 + 435) ;for v328=v177,v80[4] do local v329=1001 -(938 + 63) ;while true do if (v329==(0 + 0)) then v179=v179 + 1 ;v78[v328]=v178[v179];break;end end end break;end if (v176==(1125 -(936 + 189))) then v177=v80[2];v178={v78[v177](v13(v78,v177 + 1 + 0 ,v73))};v176=1614 -(1565 + 48) ;end end elseif ((4905==4905) and (v78[v80[2 + 0 ]]==v78[v80[1142 -(782 + 356) ]])) then v72=v72 + 1 ;else v72=v80[270 -(176 + 71 + 20) ];end elseif (v81<=((73 + 5) -48)) then if (v81>(42 -13)) then v78[v80[2]]={};else v78[v80[2]]= #v78[v80[1095 -((3727 -2752) + (668 -(83 + 468))) ]];end elseif ((v81<=((3712 -(1202 + 604)) -(157 + (8019 -6301)))) or (4136>=4411)) then local v182=v80[2];v78[v182](v13(v78,v182 + 1 + 0 ,v80[10 -7 ]));elseif ((v81==(109 -77)) or (2958==4017)) then if ((1228>=813) and (v78[v80[2 -0 ]]~=v78[v80[1022 -((1929 -1232) + 321) ]])) then v72=v72 + (2 -1) ;else v72=v80[5 -(327 -(45 + 280)) ];end elseif v78[v80[4 -2 ]] then v72=v72 + 1 + 0 ;else v72=v80[5 -(2 + 0) ];end elseif (v81<=(134 -84)) then if ((v81<=(1268 -(322 + 905))) or (3455>4050)) then if (v81<=(648 -(602 + 9))) then if (v81<=35) then if ((243==243) and (v81>34)) then local v183=v80[1192 -(449 + 740) ];local v184=v78[v183];for v236=v183 + (873 -(826 + 46)) ,v80[951 -(245 + 702) ] do v184=v184   .. v78[v236] ;end v78[v80[6 -4 ]]=v184;else v78[v80[1 + 1 ]]=v61[v80[1901 -(260 + 1638) ]];end elseif (v81==(32 + 4)) then v78[v80[(162 + 280) -(212 + 170 + 11 + 47) ]]=v61[v80[(16 -7) -6 ]];else v78[v80[2 + 0 ]]=v80[5 -2 ]~=0 ;end elseif ((v81<=(115 -76)) or (271>1572)) then if ((2739<3293) and (v81>38)) then if ((v78[v80[2]]==v80[1209 -(902 + 303) ]) or (3942<1134)) then v72=v72 + 1 ;else v72=v80[5 -(1913 -(340 + 1571)) ];end else v72=v80[3];end elseif (v81>40) then if (v78[v80[4 -2 ]]~=v80[1 + 3 ]) then v72=v72 + ((667 + 1024) -(1121 + 569)) ;else v72=v80[217 -(22 + 192) ];end else local v192=v80[685 -(483 + 200) ];local v193={v78[v192](v78[v192 + 1 ])};local v194=1463 -(1404 + 59) ;for v237=v192,v80[10 -6 ] do v194=v194 + 1 ;v78[v237]=v193[v194];end end elseif (v81<=45) then if (v81<=((1829 -(1733 + 39)) -14)) then if ((v81==(807 -(468 + (816 -519)))) or (2693==4973)) then local v195=v80[564 -((1368 -(125 + 909)) + 228) ];v78[v195]=v78[v195](v78[v195 + (3 -2) ]);else do return;end end elseif (v81==((2049 -(1096 + 852)) -57)) then local v197=v80[2];local v198,v199=v71(v78[v197](v78[v197 + 1 ]));v73=(v199 + v197) -(1 -0) ;local v200=0 + 0 ;for v240=v197,v73 do local v241=(106 + 130) -(141 + 95) ;while true do if ((2146==2146) and (v241==0)) then v200=v200 + 1 + 0 ;v78[v240]=v198[v200];break;end end end elseif (v78[v80[(5 -1) -2 ]]~=v80[9 -5 ]) then v72=v72 + 1 + 0 ;else v72=v80[8 -5 ];end elseif (v81<=(34 + 13 + 0)) then if ((v81==(24 + 22)) or (2244==3224)) then v61[v80[4 -1 ]]=v78[v80[2 + 0 ]];else local v203=v80[165 -(92 + 71) ];local v204={};for v242=1 + 0 , #v77 do local v243=v77[v242];for v279=0 -(512 -(409 + 103)) , #v243 do local v280=v243[v279];local v281=v280[766 -(574 + 191) ];local v282=v280[2 + 0 ];if ((v281==v78) and (v282>=v203)) then local v334=0 -0 ;while true do if (v334==(0 + 0)) then v204[v282]=v281[v282];v280[850 -(254 + 595) ]=v204;break;end end end end end end elseif ((v81<=((410 -(46 + 190)) -(55 + 71))) or (4904<=1916)) then v78[v80[2 -0 ]]=v78[v80[1793 -(573 + 1217) ]][v80[10 -6 ]];elseif (v81>(144 -(51 + 44))) then v78[v80[1 + 1 ]]=v80[4 -(1 + 0) ];else v78[v80[941 -(714 + 225) ]][v80[8 -5 ]]=v78[v80[5 -1 ]];end elseif ((90<=1065) and (v81<=(7 + 51))) then if (v81<=54) then if (v81<=(74 -22)) then if ((4802==4802) and (v81==(857 -(118 + 688)))) then v78[v80[2]]=v29(v69[v80[51 -(25 + 23) ]],nil,v61);else local v208=v80[2];v78[v208](v13(v78,v208 + (1318 -(1114 + 203)) + (726 -(228 + 498)) ,v80[3]));end elseif (v81==(1939 -(927 + 959))) then v78[v80[6 -(1 + 3) ]]=v78[v80[735 -(16 + 716) ]][v80[7 -3 ]];elseif ((v78[v80[2]]==v78[v80[101 -(7 + 4 + 86) ]]) or (2280<=511)) then v72=v72 + (2 -(664 -(174 + 489))) ;else v72=v80[(750 -462) -(175 + 110) ];end elseif ((v81<=(140 -84)) or (1676<=463)) then if (v81==(271 -216)) then local v211=v80[1798 -(503 + 1293) ];local v212={v78[v211](v78[v211 + 1 + 0 ])};local v213=1061 -(810 + 251) ;for v244=v211,v80[3 + 1 ] do v213=v213 + (1906 -(830 + 1075)) ;v78[v244]=v212[v213];end elseif (v80[1 + 1 ]==v78[v80[4 + 0 ]]) then v72=v72 + (534 -((567 -(303 + 221)) + (1759 -(231 + 1038)))) ;else v72=v80[736 -(711 + 19 + 3) ];end elseif (v81>(220 -163)) then v78[v80[861 -(240 + 619) ]][v80[1 + 2 ]]=v80[5 -(1163 -(171 + 991)) ];else v61[v80[1 + 2 ]]=v78[v80[1746 -(1344 + 400) ]];end elseif ((3869==3869) and (v81<=((1924 -1457) -(255 + 150)))) then if ((1158<=2613) and (v81<=(48 + 12))) then if (v81>(32 + 27)) then local v218=v80[2];v78[v218]=v78[v218](v13(v78,v218 + 1 ,v80[(32 -20) -9 ]));else do return;end end elseif ((v81>(196 -135)) or (2364<=1999)) then local v220=v69[v80[1742 -(404 + 1335) ]];local v221;local v222={};v221=v10({},{__index=function(v247,v248) local v249=406 -(183 + 223) ;local v250;while true do if (v249==(0 -0)) then v250=v222[v248];return v250[1 + 0 ][v250[1 + 1 ]];end end end,__newindex=function(v251,v252,v253) local v254=v222[v252];v254[338 -(10 + 327) ][v254[2 + 0 ]]=v253;end});for v256=339 -(118 + 220) ,v80[(4 -2) + 2 ] do v72=v72 + (450 -(108 + 273 + 68)) ;local v257=v68[v72];if ((v257[(3 -2) + 0 ]==(63 -48)) or (4922<194)) then v222[v256-((4309 -2815) -(711 + 782)) ]={v78,v257[3]};else v222[v256-((159 -(91 + 67)) + 0) ]={v60,v257[3]};end v77[ #v77 + (2 -1) ]=v222;end v78[v80[2 + (0 -0) ]]=v29(v220,v221,v61);elseif ((v78[v80[2]]==v80[1 + 3 ]) or (2091<31)) then v72=v72 + 1 + 0 ;else v72=v80[3];end elseif (v81<=(166 -102)) then if ((v81==(10 + 30 + 23)) or (2430>=4872)) then for v259=v80[1169 -(645 + 522) ],v80[1793 -(1010 + 780) ] do v78[v259]=nil;end else v78[v80[2]]={};end elseif (v81<=(65 + (523 -(423 + 100)))) then local v225=v80[(1 + 8) -7 ];local v226={};for v261=2 -(2 -1) , #v77 do local v262=v77[v261];for v290=0, #v262 do local v291=0;local v292;local v293;local v294;while true do if (v291==(1837 -(1045 + 791))) then v294=v292[4 -2 ];if (((v293==v78) and (v294>=v225)) or (4770<1735)) then local v356=0 -0 ;while true do if (v356==(505 -(351 + 81 + 73))) then v226[v294]=v293[v294];v292[1575 -(1281 + 293) ]=v226;break;end end end break;end if (v291==(266 -((799 -(326 + 445)) + 238))) then v292=v262[v290];v293=v292[2 -1 ];v291=1560 -(1381 + 178) ;end end end end elseif (v81>(62 + (17 -13))) then local v295=v80[2];local v296,v297=v71(v78[v295](v78[v295 + 1 + 0 ]));v73=(v297 + v295) -((2 -1) + (0 -0)) ;local v298=(711 -(530 + 181)) -0 ;for v310=v295,v73 do local v311=0;while true do if (v311==(0 + 0)) then v298=v298 + (471 -(381 + 89)) ;v78[v310]=v296[v298];break;end end end else v78[v80[2 + 0 ]]=v80[3];end v72=v72 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
