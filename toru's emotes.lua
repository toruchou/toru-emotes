--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v100=v5(v84,v19);v19=nil;return v100;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0;local v86;while true do if (v85==(0 -0)) then v86=(v31/((5 -3)^(v32-((878 -(282 + 595)) -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v86-(v86%(1638 -(1523 + 114))) ;end end else local v87=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v87 + v87))>=v87) and 1) or (0 + 0) ;end end local function v21() local v34=0;local v35;while true do if ((0 + (0 -0))==v34) then v35=v1(v16,v18,v18);v18=v18 + (1 -0) ;v34=1066 -(68 + 997) ;end if (v34==(1271 -((343 -(32 + 85)) + 1044))) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -(184 -(67 + 113))) );v18=v18 + (6 -2) ;return (v41 * (30800116 -14022900)) + (v40 * (65886 -(87 + 263))) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -1 ,15 + 5 ) * (2^(127 -95))) + v42 ;local v46=v20(v43,812 -((1506 -(116 + 1022)) + 423) ,983 -(802 + 150) );local v47=((v20(v43,50 -(10 + 8) )==((8 -6) -1)) and  -(1 -(0 + 0))) or (1 + 0) ;if (v46==((3639 -2642) -(915 + 82))) then if (v45==(442 -(416 + 26))) then return v47 * (0 -0) ;else v46=1 + 0 ;v44=0 -0 ;end elseif (v46==((4236 -3043) + 854)) then return ((v45==(0 -0)) and (v47 * ((1188 -(1069 + (977 -(814 + 45))))/0))) or (v47 * NaN) ;end return v8(v47,v46-(325 + 698) ) * (v44 + (v45/((4 -2)^(824 -(201 + 571))))) ;end local function v25(v48) local v49;if  not v48 then local v88=885 -(261 + 624) ;while true do if (v88==(0 -0)) then v48=v23();if (v48==(1080 -(1020 + 60))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v65=(3 -2) + 0 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 + 0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0 -0 ;end)();while true do if (v67~=0) then else if (v51==1) then local v97=(function() return 0 -0 ;end)();while true do if (1~=v97) then else v58=(function() return {};end)();for v105= #",",v57 do local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==(868 -(550 + 317))) then v109=(function() return nil;end)();while true do if (v107==(1 -0)) then if (v108== #"\\") then v109=(function() return v21()~=0 ;end)();elseif (v108==(2 -0)) then v109=(function() return v24();end)();elseif (v108== #"19(") then v109=(function() return v25();end)();end v58[v105]=(function() return v109;end)();break;end if (0==v107) then local v122=(function() return 0 -0 ;end)();local v123=(function() return;end)();while true do if (v122==0) then v123=(function() return 285 -(134 + 151) ;end)();while true do if (v123~=1) then else v107=(function() return 1666 -(970 + 695) ;end)();break;end if (v123~=0) then else local v339=(function() return 0 -0 ;end)();while true do if (v339==(1991 -(582 + 1408))) then v123=(function() return 1;end)();break;end if (v339==0) then v108=(function() return v21();end)();v109=(function() return nil;end)();v339=(function() return 3 -2 ;end)();end end end end break;end end end end break;end if (v106~=(0 -0)) then else v107=(function() return 0;end)();v108=(function() return nil;end)();v106=(function() return 1;end)();end end end v97=(function() return 7 -5 ;end)();end if (v97~=2) then else v51=(function() return 1826 -(1195 + 629) ;end)();break;end if (v97~=(0 -0)) then else v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v97=(function() return 1;end)();end end end if (v51~=2) then else v56[ #"19("]=(function() return v21();end)();for v101= #",",v23() do local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if (v102~=0) then else v103=(function() return v21();end)();if (v20(v103, #">", #"/")~=0) then else local v115=(function() return 0;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if (v115~=2) then else if (v20(v117, #" ", #"]")== #"}") then v118[2]=(function() return v58[v118[782 -(162 + 618) ]];end)();end if (v20(v117,2 + 0 ,2)== #"/") then v118[ #"91("]=(function() return v58[v118[ #"xnx"]];end)();end v115=(function() return 2 + 1 ;end)();end if (v115==(0 -0)) then local v119=(function() return 0;end)();while true do if (v119==0) then v116=(function() return v20(v103,2, #"19(");end)();v117=(function() return v20(v103, #"?id=",6);end)();v119=(function() return 1 -0 ;end)();end if (v119~=(1 + 0)) then else v115=(function() return 1637 -(1373 + 263) ;end)();break;end end end if (v115==(1003 -(451 + 549))) then if (v20(v117, #"-19", #"xxx")== #"!") then v118[ #"http"]=(function() return v58[v118[ #"xnxx"]];end)();end v53[v101]=(function() return v118;end)();break;end if (v115==1) then v118=(function() return {v22(),v22(),nil,nil};end)();if (v116==(0 -0)) then local v127=(function() return 0;end)();local v128=(function() return;end)();while true do if (0==v127) then v128=(function() return 0 -0 ;end)();while true do if (v128==0) then v118[ #"gha"]=(function() return v22();end)();v118[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v116== #"|") then v118[ #"xxx"]=(function() return v23();end)();elseif (v116==2) then v118[ #"91("]=(function() return v23() -((1386 -(746 + 638))^16) ;end)();elseif (v116== #"-19") then local v358=(function() return 0 + 0 ;end)();local v359=(function() return;end)();while true do if (v358==(0 -0)) then v359=(function() return 0;end)();while true do if (v359==0) then v118[ #"91("]=(function() return v23() -(2^(357 -(218 + 123))) ;end)();v118[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v115=(function() return 2;end)();end end end break;end end end for v104= #":",v23() do v54,v104,v28=(function() return v52(v54,v104,v28);end)();end return v56;end v67=(function() return 1582 -(1535 + 46) ;end)();end if (v67==(1 + 0)) then if (0==v51) then local v99=(function() return 0;end)();while true do if (v99==(1 + 0)) then v54=(function() return {};end)();v55=(function() return {};end)();v99=(function() return 562 -(306 + 254) ;end)();end if (v99==(1 + 1)) then v51=(function() return 1;end)();break;end if ((0 -0)==v99) then v52=(function() return function(v110,v111,v112) local v113=(function() return 1467 -(899 + 568) ;end)();local v114=(function() return;end)();while true do if ((0 + 0)~=v113) then else v114=(function() return 0;end)();while true do if (v114==0) then local v129=(function() return 0;end)();while true do if ((0 -0)~=v129) then else v110[v111-#"}" ]=(function() return v112();end)();return v110,v111,v112;end end end end break;end end end;end)();v53=(function() return {};end)();v99=(function() return 604 -(268 + 335) ;end)();end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[(954 -(174 + 489)) -(60 + 230) ];local v63=v59[574 -(426 + 146) ];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1 + 0 ;local v73= -(1457 -(282 + 1174));local v74={};local v75={...};local v76=v12("#",...) -(2 -1) ;local v77={};local v78={};for v89=0,v76 do if ((90<1065) and (v89>=v70)) then v74[v89-v70 ]=v75[v89 + 1 + 0 ];else v78[v89]=v75[v89 + ((2480 -(990 + 465)) -(706 + 132 + 186)) ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v90=1251 -(721 + 530) ;while true do if (v90==(1271 -(945 + 326))) then v80=v68[v72];v81=v80[2 -1 ];v90=1 + 0 ;end if ((701 -(271 + (1117 -688)))==v90) then if (v81<=(31 + (1907 -(830 + 1075)))) then if (v81<=16) then if ((4802==4802) and (v81<=7)) then if ((v81<=(1503 -(1408 + 92))) or (2280<=511)) then if (v81<=((473 + 614) -(461 + 625))) then if ((v81>(1288 -(993 + 295))) or (1676<=463)) then v78[v80[1 + 1 ]]=v80[3];else local v132=v80[(1141 + 32) -(418 + 753) ];local v133={};for v238=1 + 0 , #v77 do local v239=v77[v238];for v272=0 + (524 -(303 + 221)) , #v239 do local v273=0;local v274;local v275;local v276;while true do if (v273==((1270 -(231 + 1038)) + 0)) then v276=v274[1 + 1 ];if ((3869==3869) and (v275==v78) and (v276>=v132)) then v133[v276]=v275[v276];v274[1]=v133;end break;end if ((1158<=2613) and (v273==((441 + 88) -((1597 -1191) + 123)))) then v274=v239[v272];v275=v274[1770 -(1749 + 20) ];v273=1 + 0 ;end end end end end elseif ((v81>(1324 -((2411 -(171 + 991)) + 73))) or (2364<=1999)) then local v134=v80[1 + 1 ];local v135={v78[v134](v78[v134 + 1 ])};local v136=0 -0 ;for v240=v134,v80[11 -7 ] do v136=v136 + ((3627 -(1668 + 58)) -(106 + (2420 -(512 + 114)))) ;v78[v240]=v135[v136];end else local v137=0 + 0 ;local v138;while true do if (v137==(0 + 0)) then v138=v80[5 -3 ];v78[v138]=v78[v138](v13(v78,v138 + (2 -1) ,v80[3]));break;end end end elseif ((v81<=(119 -((10 -6) + (227 -117)))) or (4922<194)) then if (v81==(588 -(57 + 527))) then local v139=v80[1430 -(41 + 1386) ];local v140=v78[v139];for v243=v139 + (104 -(17 + 86)) ,v80[3 + 1 ] do v140=v140   .. v78[v243] ;end v78[v80[3 -1 ]]=v140;else v78[v80[5 -3 ]]= #v78[v80[169 -(122 + 44) ]];end elseif (v81==(10 -4)) then if v78[v80[6 -4 ]] then v72=v72 + 1 + 0 ;else v72=v80[(4 -3) + 2 ];end else v78[v80[(7 -4) -1 ]]=v80[68 -((104 -74) + 35) ]~=(0 + 0) ;end elseif (v81<=11) then if (v81<=(1266 -(1043 + 214))) then if (v81==(30 -(11 + 11))) then v78[v80[2]]=v60[v80[3]];else v78[v80[2]]=v78[v80[(3031 -1816) -(323 + 889) ]][v80[10 -6 ]];end elseif (v81==10) then do return;end elseif (v78[v80[582 -(361 + 219) ]]~=v80[324 -(53 + 267) ]) then v72=v72 + 1 + 0 ;else v72=v80[416 -(15 + 319 + 79) ];end elseif (v81<=(995 -(18 + 964))) then if (v81==((154 -110) -32)) then if (v78[v80[2 + 0 + 0 ]]~=v80[3 + (2 -1) ]) then v72=v72 + (851 -((32 -12) + 722 + 108)) ;else v72=v80[3 + (0 -0) ];end else local v148=126 -(116 + 10) ;local v149;while true do if (v148==(0 + 0)) then v149=v80[1996 -(109 + 1885) ];v78[v149](v13(v78,v149 + (739 -((2011 -(1269 + 200)) + (375 -179))) ,v80[(821 -(98 + 717)) -3 ]));break;end end end elseif ((v81<=(43 -29)) or (2091<31)) then v78[v80[1 + (1249 -(111 + 1137)) ]]=v80[2 + (159 -(91 + 67)) ];elseif (v81>((17 -11) + 9)) then for v305=v80[4 -2 ],v80[(833 -(802 + 24)) -4 ] do v78[v305]=nil;end else local v280=1551 -(1126 + 425) ;local v281;local v282;local v283;while true do if (v280==((699 -293) -(118 + 287))) then v283=0 -0 ;for v360=v281,v80[4] do local v361=(1415 -294) -(30 + 88 + 1003) ;while true do if ((v361==(0 -0)) or (2430>=4872)) then v283=v283 + (378 -(142 + 35 + 200)) ;v78[v360]=v282[v283];break;end end end break;end if ((0 -(523 -(423 + 100)))==v280) then v281=v80[1 + 1 ];v282={v78[v281](v13(v78,v281 + (1 -0) ,v73))};v280=1 + 0 ;end end end elseif (v81<=(24 + 0)) then if (v81<=20) then if (v81<=(11 + 7)) then if ((v81==(8 + (780 -(326 + 445)))) or (4770<1735)) then v78[v80[2 + 0 ]]=v61[v80[6 -3 ]];else local v154=0 -0 ;local v155;while true do if ((v154==((0 -0) -0)) or (4439<=2350)) then v155=v80[1 + 1 ];v78[v155](v78[v155 + (2 -1) + 0 ]);break;end end end elseif (v81>((20 + 71) -72)) then local v156=v80[756 -(239 + 514) ];local v157=v78[v156];for v244=v156 + 1 + (0 -0) ,v80[1333 -(797 + 532) ] do v157=v157   .. v78[v244] ;end v78[v80[2 + 0 ]]=v157;else v72=v80[2 + 1 ];end elseif ((v81<=22) or (4479<4466)) then if (v81==(49 -28)) then v78[v80[1204 -(373 + 829) ]]=v29(v69[v80[734 -(476 + 255) ]],nil,v61);else local v161=1130 -(369 + 761) ;local v162;local v163;while true do if ((2547>1225) and (v161==(0 + 0))) then v162=v80[2];v163={};v161=1 -0 ;end if (v161==(1 -0)) then for v319=239 -(64 + 174) , #v77 do local v320=v77[v319];for v344=0 + 0 , #v320 do local v345=0;local v346;local v347;local v348;while true do if (v345==(1 -0)) then v348=v346[(1127 -789) -(144 + 192) ];if ((v347==v78) and (v348>=v162)) then v163[v348]=v347[v348];v346[217 -(42 + 174) ]=v163;end break;end if (v345==(0 + 0)) then v346=v320[v344];v347=v346[1];v345=1;end end end end break;end end end elseif (v81>23) then v78[v80[(713 -(530 + 181)) + 0 ]]=v78[v80[2 + 1 ]];else v61[v80[(2388 -(614 + 267)) -(363 + 409 + 732) ]]=v78[v80[1582 -(1183 + 397) ]];end elseif (v81<=(85 -57)) then if (v81<=(20 + 6)) then if (v81>25) then local v168=0 + 0 ;local v169;local v170;local v171;while true do if ((4671>2674) and (v168==(1976 -(1913 + 62)))) then v171=0 + 0 ;for v321=v169,v80[10 -6 ] do local v322=0;while true do if ((v322==(1933 -(565 + 1368))) or (3696<3327)) then v171=v171 + (3 -2) ;v78[v321]=v170[v171];break;end end end break;end if (v168==0) then v169=v80[2];v170={v78[v169](v13(v78,v169 + (1 -0) ,v73))};v168=1;end end elseif ((v80[2]==v78[v80[4 + 0 ]]) or (4542==2970)) then v72=v72 + (857 -(564 + 292)) ;else v72=v80[4 -1 ];end elseif ((252<=1977) and (v81==(81 -(22 + 32)))) then local v172=v80[306 -(244 + 60) ];local v173=v80[4];local v174=v172 + 2 + 0 + 0 ;local v175={v78[v172](v78[v172 + 1 ],v78[v174])};for v245=1002 -((2185 -1247) + 63) ,v173 do v78[v174 + v245 ]=v175[v245];end local v176=v175[1 + 0 ];if v176 then v78[v174]=v176;v72=v80[1128 -(936 + 189) ];else v72=v72 + 1 ;end else local v177=v69[v80[1 + 2 ]];local v178;local v179={};v178=v10({},{__index=function(v248,v249) local v250=1613 -(1565 + 48) ;local v251;while true do if ((v250==0) or (1436==3775)) then v251=v179[v249];return v251[1 + 0 ][v251[2]];end end end,__newindex=function(v252,v253,v254) local v255=v179[v253];v255[1][v255[1140 -(782 + 356) ]]=v254;end});for v257=(126 + 142) -(46 + 130 + 91) ,v80[10 -6 ] do v72=v72 + (1434 -(797 + 636)) ;local v258=v68[v72];if (v258[1]==(45 -14)) then v179[v257-1 ]={v78,v258[3 + 0 ]};else v179[v257-(3 -(1621 -(1427 + 192))) ]={v60,v258[1021 -(697 + 321) ]};end v77[ #v77 + (2 -1) ]=v179;end v78[v80[3 -(1 -0) ]]=v29(v177,v178,v61);end elseif (v81<=((1881 -(1293 + 519)) -39)) then if (v81>29) then if ((v78[v80[2]]==v78[v80[(3 -1) + 2 ]]) or (1618<930)) then v72=v72 + ((1 + 0) -0) ;else v72=v80[3];end else v78[v80[5 -3 ]]=v60[v80[(3211 -1981) -(322 + 905) ]];end elseif (v81<=31) then v78[v80[613 -(602 + 9) ]]=v78[v80[3]];elseif (v81>32) then local v288=0;local v289;local v290;while true do if ((4723>4153) and (v288==1)) then v78[v289 + 1 ]=v290;v78[v289]=v290[v80[(2281 -1088) -(449 + 740) ]];break;end if ((v288==0) or (3654>=4654)) then v289=v80[874 -(826 + (198 -152)) ];v290=v78[v80[(2237 -1287) -(245 + 702) ]];v288=1;end end else local v291=v80[6 -4 ];v78[v291](v78[v291 + 1 + 0 ]);end elseif (v81<=50) then if ((951<=1496) and (v81<=(14 + 27))) then if ((v81<=(1935 -((603 -343) + 1638))) or (1736==571)) then if (v81<=((97 + 378) -(344 + 38 + 58))) then if (v81>34) then local v185=v80[(13 -7) -4 ];local v186,v187=v71(v78[v185](v78[v185 + 1 + 0 ]));v73=(v187 + v185) -(1 + 0 + 0) ;local v188=0 -0 ;for v260=v185,v73 do v188=v188 + (2 -1) ;v78[v260]=v186[v188];end else local v189=v80[(401 + 806) -(902 + (629 -(192 + 134))) ];local v190=v80[8 -4 ];local v191=v189 + (4 -2) ;local v192={v78[v189](v78[v189 + (1691 -(1121 + 569)) ],v78[v191])};for v263=215 -((1298 -(316 + 960)) + 120 + 72) ,v190 do v78[v191 + v263 ]=v192[v263];end local v193=v192[684 -(483 + 200) ];if (v193 or (896>4769)) then local v292=1463 -(1404 + 59) ;while true do if (v292==0) then v78[v191]=v193;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81>(98 -(1158 -(709 + 387)))) then v78[v80[2 -0 ]][v80[(2626 -(673 + 1185)) -(468 + (861 -564)) ]]=v78[v80[566 -(334 + 228) ]];else local v196=v80[6 -4 ];v78[v196](v13(v78,v196 + 1 ,v73));end elseif ((v81<=(89 -50)) or (1045<=1020)) then if ((v81==(68 -30)) or (1160<=328)) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);elseif (v78[v80[1 + 1 ]]==v80[240 -(141 + 53 + 42) ]) then v72=v72 + 1 + 0 + 0 ;else v72=v80[7 -4 ];end elseif ((3808>2924) and (v81>40)) then local v198=0 -0 ;local v199;while true do if ((3891<4919) and (v198==(0 + 0))) then v199=v80[(5 + 0) -3 ];v78[v199](v13(v78,v199 + 1 + (0 -0) ,v80[2 + 1 ]));break;end end else local v200=v80[2 -0 ];v78[v200]=v78[v200](v13(v78,v200 + 1 ,v80[3]));end elseif (v81<=(27 + 18)) then if (v81<=43) then if (v81==(205 -(92 + (271 -200)))) then local v202=0;local v203;local v204;local v205;while true do if ((v202==(1 + (0 -0))) or (2234<=1502)) then v205=0 + 0 ;for v324=v203,v80[6 -2 ] do local v325=0;while true do if ((v325==(765 -(574 + 191))) or (2512<432)) then v205=v205 + 1 ;v78[v324]=v204[v205];break;end end end break;end if (v202==(0 + (551 -(83 + 468)))) then v203=v80[4 -2 ];v204={v78[v203](v78[v203 + (850 -(254 + 595)) ])};v202=127 -(55 + 71) ;end end elseif ((v78[v80[2 -0 ]]==v78[v80[1794 -(573 + 1217) ]]) or (1848==865)) then v72=v72 + ((2 + 0) -1) ;else v72=v80[1 + (1808 -(1202 + 604)) ];end elseif (v81==(70 -(34 -8))) then local v206=v80[(232 + 709) -((3333 -2619) + 225) ];v78[v206]=v78[v206](v78[v206 + (2 -1) ]);else v61[v80[3 -0 ]]=v78[v80[2 -0 ]];end elseif ((v81<=(6 + 41)) or (4682<=4541)) then if (v81>(65 -(37 -18))) then if ((v78[v80[808 -((326 -208) + 688) ]]~=v78[v80[52 -(25 + (44 -21)) ]]) or (3026>=4046)) then v72=v72 + 1 + 0 ;else v72=v80[1889 -(927 + 959) ];end else local v210=v80[6 -4 ];v78[v210](v13(v78,v210 + 1 ,v73));end elseif ((2008>638) and (v81<=(780 -((341 -(45 + 280)) + 716)))) then do return;end elseif (v81==(94 -45)) then if ((1775<=3233) and (v78[v80[99 -(11 + 86) ]]==v80[4 + 0 ])) then v72=v72 + (2 -1) ;else v72=v80[288 -(175 + 110) ];end elseif (v78[v80[4 -2 ]]~=v78[v80[19 -15 ]]) then v72=v72 + (1797 -(503 + 1293)) ;else v72=v80[3];end elseif (v81<=(161 -(90 + 13))) then if (v81<=54) then if (v81<=(14 + 24 + 14)) then if ((v81>(1112 -(449 + 361 + 251))) or (4543==1997)) then v78[v80[2 + (0 -0) ]]= #v78[v80[1 + 0 + 2 ]];else local v212=0 + 0 ;local v213;while true do if (v212==0) then v213=v80[2];v78[v213]=v78[v213](v78[v213 + (534 -(43 + 490)) ]);break;end end end elseif ((v81>(786 -((1316 -605) + 22))) or (3102<728)) then if v78[v80[2]] then v72=v72 + (3 -2) ;else v72=v80[862 -((2171 -(609 + 1322)) + 619) ];end else local v214=v80[(455 -(13 + 441)) + (1912 -(340 + 1571)) ];local v215,v216=v71(v78[v214](v78[v214 + (1 -0) ]));v73=(v216 + v214) -(1 + 0 + 0) ;local v217=1744 -(1344 + 400) ;for v266=v214,v73 do v217=v217 + (1773 -(1733 + 39)) ;v78[v266]=v215[v217];end end elseif (v81<=56) then if (v81>(460 -(255 + 150))) then for v269=v80[2 + 0 ],v80[2 + 1 ] do v78[v269]=nil;end else local v218=v80[8 -6 ];local v219=v78[v80[3]];v78[v218 + 1 ]=v219;v78[v218]=v219[v80[(44 -32) -8 ]];end elseif ((345==345) and (v81==(1796 -(404 + 1335)))) then v78[v80[(1068 -660) -(183 + 223) ]][v80[3 -0 ]]=v78[v80[4]];else v72=v80[2 + 1 ];end elseif (v81<=(23 + 39)) then if ((v81<=(397 -(10 + 327))) or (2827<378)) then if (v81>(42 + 17)) then v78[v80[2]]={};elseif (v80[340 -((587 -469) + (604 -384)) ]==v78[v80[2 + 2 ]]) then v72=v72 + (450 -(108 + 341)) ;else v72=v80[1 + 1 + 1 ];end elseif ((v81==(257 -196)) or (3476<2597)) then v78[v80[2]]=v61[v80[1496 -(711 + (2839 -2057)) ]];else v78[v80[2]]={};end elseif (v81<=((1156 -(125 + 909)) -58)) then if (v81>(532 -(270 + 199))) then v78[v80[(1949 -(1096 + 852)) + 1 ]][v80[(648 + 1174) -(261 + 319 + 1239) ]]=v80[4];else v78[v80[2]][v80[8 -5 ]]=v80[4 + (0 -0) ];end elseif ((3079<4794) and (v81<=(3 + 62))) then local v234=0;local v235;local v236;local v237;while true do if (v234==(2 + 0)) then for v328=2 -1 ,v80[2 + (514 -(409 + 103)) ] do v72=v72 + (2 -1) ;local v329=v68[v72];if ((4854>4464) and (v329[(237 -(46 + 190)) + 0 ]==31)) then v237[v328-(1168 -(645 + 522)) ]={v78,v329[14 -11 ]};else v237[v328-(2 -1) ]={v60,v329[4 -1 ]};end v77[ #v77 + 1 ]=v237;end v78[v80[507 -(99 + 252 + 154) ]]=v29(v235,v236,v61);break;end if ((1574 -(1281 + 293))==v234) then v235=v69[v80[269 -(28 + 238) ]];v236=nil;v234=(1319 -(1114 + 203)) -1 ;end if (v234==(1560 -(1381 + 178))) then v237={};v236=v10({},{__index=function(v331,v332) local v333=v237[v332];return v333[1 + 0 ][v333[2 + 0 ]];end,__newindex=function(v334,v335,v336) local v337=v237[v335];v337[1 + 0 ][v337[6 -4 ]]=v336;end});v234=2 + 0 ;end end elseif ((v81>(536 -(274 + 107 + 89))) or (4912==3758)) then v78[v80[2 + 0 ]]=v78[v80[3]][v80[3 + 1 ]];else v78[v80[2 -0 ]]=v80[1159 -(1074 + (808 -(228 + 498))) ]~=((0 + 0) -0) ;end v72=v72 + (1785 -(214 + 868 + 702)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
