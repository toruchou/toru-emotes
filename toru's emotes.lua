local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\177\7","\225\159\41\162\162\75\114"),function(v42) if (v9(v42,2)==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1));return "";end end else local v104=v10(v8(v42,16));if v30 then local v110=v13(v104,v30);v30=nil;return v110;else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v105-(v105%1) ;else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + (1 -0) ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * (875 -(555 + 64))) + v49 ;end if (0==v48) then v49,v50=v9(v27,v29,v29 + (4 -2) );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (935 -(857 + 74)) ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==0) then if (v59==0) then return v61 * (568 -(367 + 201)) ;else local v111=0;while true do if (v111==0) then v60=1;v58=0;break;end end end elseif (v60==(2974 -(214 + 713))) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=v32();local v82;if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v70[v80]=v82;end v68[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1 + 0 ,878 -(282 + 595) )==0) then local v118=0;local v119;local v120;local v121;while true do if (2==v118) then if (v31(v120,1,1)==1) then v121[2]=v70[v121[2]];end if (v31(v120,2 -0 ,2)==1) then v121[3]=v70[v121[3]];end v118=3;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v127=0;while true do if (0==v127) then v121[1640 -(1523 + 114) ]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then local v134=0;while true do if (v134==0) then v121[3]=v34() -(2^16) ;v121[4 + 0 ]=v33();break;end end end v118=2;end if (v118==0) then v119=v31(v86,2,3);v120=v31(v86,4,6);v118=1;end if (v118==3) then if (v31(v120,3,3)==1) then v121[4]=v70[v121[4]];end v65[v84]=v121;break;end end end break;end end end for v87=1,v34() do v66[v87-(1066 -(68 + 997)) ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1271 -(226 + 1044) ];local v76=v72[2];local v77=v72[3];return function(...) local v89=v75;local v90=v76;local v91=v77;local v92=v38;local v93=1;local v94= -(4 -3);local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v108=0,v97 do if (v108>=v91) then v95[v108-v91 ]=v96[v108 + 1 ];else v99[v108]=v96[v108 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v109=0;while true do if (1==v109) then if (v102<=51) then if (v102<=25) then if (v102<=12) then if (v102<=(122 -(32 + 85))) then if (v102<=(2 + 0)) then if (v102<=0) then v99[v101[2]]=v101[3];elseif (v102==1) then local v194=0;local v195;while true do if (v194==0) then v195=v101[2];v99[v195]=v99[v195](v21(v99,v195 + 1 ,v101[1 + 2 ]));break;end end elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(960 -(892 + 65))) then do return v99[v101[2]]();end elseif (v102==4) then v99[v101[4 -2 ]]=v99[v101[3]];else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102<=8) then if (v102<=6) then local v137=0;local v138;local v139;while true do if (v137==1) then for v384=1, #v98 do local v385=0;local v386;while true do if (0==v385) then v386=v98[v384];for v503=0, #v386 do local v504=0;local v505;local v506;local v507;while true do if (v504==0) then v505=v386[v503];v506=v505[1];v504=1;end if (v504==1) then v507=v505[2];if ((v506==v99) and (v507>=v138)) then local v556=0;while true do if (v556==0) then v139[v507]=v506[v507];v505[1]=v139;break;end end end break;end end end break;end end end break;end if (0==v137) then v138=v101[2];v139={};v137=1;end end elseif (v102==(12 -5)) then v99[v101[2]][v101[3]]=v101[4];else local v202=0;local v203;while true do if (v202==0) then v203=v101[2];v99[v203]=v99[v203](v21(v99,v203 + 1 ,v101[4 -1 ]));break;end end end elseif (v102<=10) then if (v102>9) then v99[v101[2]]={};elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==11) then v93=v101[353 -(87 + 263) ];elseif (v99[v101[182 -(67 + 113) ]]~=v99[v101[4]]) then v93=v93 + 1 + 0 ;else v93=v101[7 -4 ];end elseif (v102<=18) then if (v102<=15) then if (v102<=(10 + 3)) then local v140=v101[2];local v141=v101[4];local v142=v140 + 2 ;local v143={v99[v140](v99[v140 + 1 ],v99[v142])};for v189=1,v141 do v99[v142 + v189 ]=v143[v189];end local v144=v143[1];if v144 then v99[v142]=v144;v93=v101[3];else v93=v93 + 1 ;end elseif (v102==14) then local v208=0;local v209;while true do if (v208==0) then v209=v101[2];v99[v209](v99[v209 + 1 ]);break;end end elseif (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=16) then v99[v101[2]]=v99[v101[3]] + v101[956 -(802 + 150) ] ;elseif (v102==17) then local v210=0;local v211;local v212;local v213;while true do if (v210==0) then v211=v101[2];v212=v99[v211 + 2 ];v210=1;end if (v210==1) then v213=v99[v211] + v212 ;v99[v211]=v213;v210=2;end if (v210==2) then if (v212>0) then if (v213<=v99[v211 + 1 ]) then local v515=0;while true do if (v515==0) then v93=v101[7 -4 ];v99[v211 + 3 ]=v213;break;end end end elseif (v213>=v99[v211 + 1 ]) then local v516=0;while true do if (v516==0) then v93=v101[3];v99[v211 + (5 -2) ]=v213;break;end end end break;end end else v93=v101[3];end elseif (v102<=(16 + 5)) then if (v102<=19) then local v146=0;local v147;local v148;local v149;local v150;while true do if (v146==1) then v94=(v149 + v147) -1 ;v150=0;v146=2;end if (v146==2) then for v390=v147,v94 do v150=v150 + 1 ;v99[v390]=v148[v150];end break;end if (v146==0) then v147=v101[2];v148,v149=v92(v99[v147](v99[v147 + (998 -(915 + 82)) ]));v146=1;end end elseif (v102==20) then v99[v101[2]]=v73[v101[3]];else local v217=0;local v218;local v219;while true do if (v217==0) then v218=v101[2];v219=v99[v218];v217=1;end if (v217==1) then for v460=v218 + 1 ,v94 do v15(v219,v99[v460]);end break;end end end elseif (v102<=23) then if (v102>22) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else local v220=0;local v221;while true do if (0==v220) then v221=v101[2];do return v99[v221](v21(v99,v221 + 1 ,v101[8 -5 ]));end break;end end end elseif (v102>24) then local v222=0;local v223;local v224;local v225;local v226;while true do if (v222==2) then for v461=v223,v94 do local v462=0;while true do if (v462==0) then v226=v226 + 1 ;v99[v461]=v224[v226];break;end end end break;end if (v222==1) then v94=(v225 + v223) -1 ;v226=0;v222=2;end if (v222==0) then v223=v101[2];v224,v225=v92(v99[v223](v21(v99,v223 + 1 ,v94)));v222=1;end end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=38) then if (v102<=31) then if (v102<=28) then if (v102<=(16 + 10)) then v99[v101[2]]=v99[v101[3]][v99[v101[4]]];elseif (v102>27) then local v229=0;local v230;while true do if (v229==0) then v230=v101[2];do return v21(v99,v230,v94);end break;end end else v99[v101[2]]=v101[3] + v99[v101[4]] ;end elseif (v102<=29) then local v153=0;local v154;local v155;local v156;while true do if (v153==1) then v156=0;for v394=v154,v101[4] do v156=v156 + 1 ;v99[v394]=v155[v156];end break;end if (v153==0) then v154=v101[2];v155={v99[v154](v99[v154 + 1 ])};v153=1;end end elseif (v102==30) then if (v99[v101[2]]==v101[4 -0 ]) then v93=v93 + 1 ;else v93=v101[3];end else local v232=v101[2];do return v21(v99,v232,v94);end end elseif (v102<=34) then if (v102<=32) then v99[v101[2]]=v99[v101[3]] + v101[4] ;elseif (v102>33) then local v233=0;local v234;local v235;local v236;while true do if (v233==1) then v236=0;for v463=v234,v101[4] do local v464=0;while true do if (0==v464) then v236=v236 + 1 ;v99[v463]=v235[v236];break;end end end break;end if (v233==0) then v234=v101[2];v235={v99[v234](v21(v99,v234 + (1188 -(1069 + 118)) ,v94))};v233=1;end end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=36) then if (v102>(79 -44)) then v99[v101[2]][v99[v101[3]]]=v99[v101[4]];else local v239=v101[2];v99[v239]=v99[v239](v21(v99,v239 + 1 ,v94));end elseif (v102==37) then v99[v101[3 -1 ]]=v101[3]~=0 ;else v99[v101[2]]=v99[v101[3]][v101[4]];end elseif (v102<=44) then if (v102<=41) then if (v102<=39) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif (v102==40) then local v244=0;local v245;local v246;local v247;local v248;while true do if (v244==1) then v94=(v247 + v245) -1 ;v248=0;v244=2;end if (v244==2) then for v465=v245,v94 do local v466=0;while true do if (0==v466) then v248=v248 + 1 ;v99[v465]=v246[v248];break;end end end break;end if (v244==0) then v245=v101[2];v246,v247=v92(v99[v245](v21(v99,v245 + 1 ,v101[3])));v244=1;end end else v99[v101[2]]=v40(v90[v101[3]],nil,v74);end elseif (v102<=42) then local v159=0;local v160;local v161;local v162;while true do if (v159==1) then v162=v99[v160 + 2 ];if (v162>0) then if (v161>v99[v160 + (1 -0) ]) then v93=v101[3];else v99[v160 + 3 ]=v161;end elseif (v161<v99[v160 + 1 + 0 ]) then v93=v101[3];else v99[v160 + 3 ]=v161;end break;end if (v159==0) then v160=v101[1 + 1 ];v161=v99[v160];v159=1;end end elseif (v102>43) then v99[v101[2]]={};else local v251=0;local v252;local v253;local v254;while true do if (v251==2) then if (v253>0) then if (v254<=v99[v252 + 1 ]) then local v523=0;while true do if (v523==0) then v93=v101[3];v99[v252 + (9 -6) ]=v254;break;end end end elseif (v254>=v99[v252 + 1 ]) then local v524=0;while true do if (v524==0) then v93=v101[3];v99[v252 + 3 ]=v254;break;end end end break;end if (v251==1) then v254=v99[v252] + v253 ;v99[v252]=v254;v251=2;end if (v251==0) then v252=v101[2];v253=v99[v252 + (793 -(368 + 423)) ];v251=1;end end end elseif (v102<=47) then if (v102<=45) then local v163=0;local v164;local v165;while true do if (v163==0) then v164=v101[2];v165=v99[v101[3]];v163=1;end if (v163==1) then v99[v164 + 1 ]=v165;v99[v164]=v165[v99[v101[4]]];break;end end elseif (v102==46) then for v356=v101[2],v101[21 -(10 + 8) ] do v99[v356]=nil;end else local v255=0;local v256;while true do if (0==v255) then v256=v101[2];v99[v256]=v99[v256](v21(v99,v256 + (3 -2) ,v94));break;end end end elseif (v102<=49) then if (v102>48) then local v257=0;local v258;local v259;local v260;while true do if (v257==1) then v260=v99[v258 + 2 ];if (v260>0) then if (v259>v99[v258 + (443 -(416 + 26)) ]) then v93=v101[3];else v99[v258 + 3 ]=v259;end elseif (v259<v99[v258 + 1 ]) then v93=v101[3];else v99[v258 + (9 -6) ]=v259;end break;end if (v257==0) then v258=v101[2];v259=v99[v258];v257=1;end end elseif (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[2 + 1 ];end elseif (v102==50) then do return;end else local v261=v90[v101[3]];local v262;local v263={};v262=v18({},{[v7("\180\184\29\12\81\142\159","\53\235\231\116\98")]=function(v358,v359) local v360=0;local v361;while true do if (v360==0) then v361=v263[v359];return v361[1 -0 ][v361[2]];end end end,[v7("\123\221\93\131\39\173\23\56\65\250","\92\36\130\51\230\80\196\121")]=function(v362,v363,v364) local v365=0;local v366;while true do if (v365==0) then v366=v263[v363];v366[1][v366[2]]=v364;break;end end end});for v367=1,v101[4] do local v368=0;local v369;while true do if (v368==0) then v93=v93 + 1 ;v369=v89[v93];v368=1;end if (1==v368) then if (v369[1]==4) then v263[v367-1 ]={v99,v369[433 -(44 + 386) ]};else v263[v367-(1487 -(998 + 488)) ]={v73,v369[3]};end v98[ #v98 + 1 ]=v263;break;end end end v99[v101[2]]=v40(v261,v262,v74);end elseif (v102<=77) then if (v102<=64) then if (v102<=57) then if (v102<=54) then if (v102<=52) then local v166=v101[2];do return v99[v166](v21(v99,v166 + 1 ,v101[3]));end elseif (v102>53) then v99[v101[1 + 1 ]]=v101[3 + 0 ]~=0 ;else v99[v101[2]]=v101[3];end elseif (v102<=(827 -(201 + 571))) then if (v101[1140 -(116 + 1022) ]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>56) then local v269=0;local v270;while true do if (0==v269) then v270=v101[2];v99[v270](v99[v270 + 1 ]);break;end end else local v271=v101[2];v99[v271](v21(v99,v271 + 1 ,v94));end elseif (v102<=60) then if (v102<=58) then local v167=0;local v168;local v169;local v170;local v171;while true do if (v167==1) then v94=(v170 + v168) -1 ;v171=0;v167=2;end if (2==v167) then for v400=v168,v94 do local v401=0;while true do if (v401==0) then v171=v171 + 1 ;v99[v400]=v169[v171];break;end end end break;end if (v167==0) then v168=v101[2];v169,v170=v92(v99[v168](v99[v168 + 1 ]));v167=1;end end elseif (v102>59) then v99[v101[8 -6 ]]=v40(v90[v101[2 + 1 ]],nil,v74);else local v273=0;local v274;local v275;local v276;while true do if (0==v273) then v274=v101[2];v275={v99[v274](v21(v99,v274 + 1 ,v94))};v273=1;end if (v273==1) then v276=0;for v472=v274,v101[4] do local v473=0;while true do if (v473==0) then v276=v276 + 1 ;v99[v472]=v275[v276];break;end end end break;end end end elseif (v102<=62) then if (v102>61) then if (v99[v101[7 -5 ]]~=v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else local v277=0;local v278;local v279;while true do if (v277==1) then for v474=v278 + 1 ,v94 do v15(v279,v99[v474]);end break;end if (v277==0) then v278=v101[2];v279=v99[v278];v277=1;end end end elseif (v102==63) then local v280=v101[2];local v281=v101[4];local v282=v280 + 2 ;local v283={v99[v280](v99[v280 + 1 ],v99[v282])};for v371=1,v281 do v99[v282 + v371 ]=v283[v371];end local v284=v283[1];if v284 then local v403=0;while true do if (v403==0) then v99[v282]=v284;v93=v101[3];break;end end else v93=v93 + 1 ;end elseif v99[v101[2]] then v93=v93 + (3 -2) ;else v93=v101[3];end elseif (v102<=70) then if (v102<=67) then if (v102<=65) then local v172=0;local v173;local v174;local v175;while true do if (v172==1) then v175=0;for v405=v173,v101[4] do local v406=0;while true do if (v406==0) then v175=v175 + 1 ;v99[v405]=v174[v175];break;end end end break;end if (v172==0) then v173=v101[2];v174={v99[v173](v99[v173 + 1 ])};v172=1;end end elseif (v102>66) then v99[v101[2]][v101[3]]=v99[v101[4]];elseif (v99[v101[2]]==v99[v101[4]]) then v93=v93 + (860 -(814 + 45)) ;else v93=v101[3];end elseif (v102<=68) then for v192=v101[2],v101[3] do v99[v192]=nil;end elseif (v102==69) then v99[v101[4 -2 ]][v99[v101[3]]]=v101[4];else local v289=0;local v290;local v291;local v292;local v293;while true do if (v289==0) then v290=v101[2];v291,v292=v92(v99[v290](v21(v99,v290 + 1 ,v101[3])));v289=1;end if (v289==2) then for v475=v290,v94 do local v476=0;while true do if (v476==0) then v293=v293 + 1 ;v99[v475]=v291[v293];break;end end end break;end if (1==v289) then v94=(v292 + v290) -1 ;v293=0;v289=2;end end end elseif (v102<=73) then if (v102<=71) then v99[v101[2]]=v101[3] + v99[v101[4]] ;elseif (v102>72) then local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297={};v296=v18({},{[v7("\122\151\188\210\142\191\93","\218\37\200\213\188\234")]=function(v477,v478) local v479=0;local v480;while true do if (v479==0) then v480=v297[v478];return v480[1][v480[2]];end end end,[v7("\61\64\69\11\100\11\113\79\11\107","\19\98\31\43\110")]=function(v481,v482,v483) local v484=0;local v485;while true do if (0==v484) then v485=v297[v482];v485[1][v485[2]]=v483;break;end end end});v294=2;end if (v294==0) then v295=v90[v101[3]];v296=nil;v294=1;end if (v294==2) then for v486=1 + 0 ,v101[4] do local v487=0;local v488;while true do if (v487==0) then v93=v93 + 1 ;v488=v89[v93];v487=1;end if (v487==1) then if (v488[1]==(2 + 2)) then v297[v486-1 ]={v99,v488[4 -1 ]};else v297[v486-1 ]={v73,v488[3]};end v98[ #v98 + 1 ]=v297;break;end end end v99[v101[2]]=v40(v295,v296,v74);break;end end elseif (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=75) then if (v102==74) then v99[v101[2]]=v99[v101[3]]%v99[v101[1084 -(1020 + 60) ]] ;else v99[v101[1425 -(630 + 793) ]][v101[3]]=v99[v101[4]];end elseif (v102>76) then v74[v101[3]]=v99[v101[2]];else local v303=0;local v304;while true do if (v303==0) then v304=v101[2];v99[v304]=v99[v304](v99[v304 + 1 ]);break;end end end elseif (v102<=90) then if (v102<=83) then if (v102<=80) then if (v102<=78) then v99[v101[2]]= #v99[v101[3]];elseif (v102>79) then v99[v101[2]]=v99[v101[3]];else do return v99[v101[2]]();end end elseif (v102<=81) then local v178=0;local v179;local v180;while true do if (v178==1) then v99[v179 + 1 ]=v180;v99[v179]=v180[v101[4]];break;end if (v178==0) then v179=v101[2];v180=v99[v101[9 -6 ]];v178=1;end end elseif (v102==(388 -306)) then v99[v101[2]][v101[3]]=v101[2 + 2 ];else local v309=0;local v310;local v311;local v312;local v313;while true do if (v309==1) then v94=(v312 + v310) -1 ;v313=0;v309=2;end if (v309==2) then for v489=v310,v94 do local v490=0;while true do if (v490==0) then v313=v313 + 1 ;v99[v489]=v311[v313];break;end end end break;end if (v309==0) then v310=v101[2];v311,v312=v92(v99[v310](v21(v99,v310 + 1 ,v94)));v309=1;end end end elseif (v102<=(295 -209)) then if (v102<=84) then v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;elseif (v102>85) then v74[v101[1750 -(760 + 987) ]]=v99[v101[2]];else v99[v101[2]]=v99[v101[3]][v101[4]];end elseif (v102<=88) then if (v102>(2000 -(1789 + 124))) then local v318=0;local v319;while true do if (v318==0) then v319=v101[2];v99[v319](v21(v99,v319 + 1 ,v101[3]));break;end end else v99[v101[2]]=v99[v101[3]]%v101[4] ;end elseif (v102==(855 -(745 + 21))) then do return;end else local v321=0;local v322;local v323;while true do if (v321==1) then v99[v322 + 1 ]=v323;v99[v322]=v323[v99[v101[4]]];break;end if (v321==0) then v322=v101[2];v323=v99[v101[3]];v321=1;end end end elseif (v102<=96) then if (v102<=93) then if (v102<=91) then local v182=0;local v183;local v184;while true do if (1==v182) then for v409=1, #v98 do local v410=0;local v411;while true do if (0==v410) then v411=v98[v409];for v510=0, #v411 do local v511=0;local v512;local v513;local v514;while true do if (v511==0) then v512=v411[v510];v513=v512[1];v511=1;end if (1==v511) then v514=v512[5 -3 ];if ((v513==v99) and (v514>=v183)) then local v557=0;while true do if (0==v557) then v184[v514]=v513[v514];v512[1]=v184;break;end end end break;end end end break;end end end break;end if (v182==0) then v183=v101[1 + 1 ];v184={};v182=1;end end elseif (v102==(360 -268)) then v99[v101[2]]=v99[v101[3]][v99[v101[4]]];else local v326=v101[3];local v327=v99[v326];for v381=v326 + 1 ,v101[4] do v327=v327   .. v99[v381] ;end v99[v101[2]]=v327;end elseif (v102<=94) then v99[v101[2]]=v74[v101[3]];elseif (v102>95) then local v329=v101[3];local v330=v99[v329];for v382=v329 + 1 ,v101[4] do v330=v330   .. v99[v382] ;end v99[v101[2]]=v330;elseif (v99[v101[1 + 1 ]]~=v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(78 + 21)) then if (v102<=97) then v99[v101[2]]=v73[v101[3]];elseif (v102>98) then v99[v101[2]]=v74[v101[3]];else local v334=v101[2];v99[v334](v21(v99,v334 + 1 ,v101[3]));end elseif (v102<=(1156 -(87 + 968))) then if (v102==100) then local v335=0;local v336;while true do if (0==v335) then v336=v101[2];v99[v336](v21(v99,v336 + 1 ,v94));break;end end else local v337=0;local v338;while true do if (v337==0) then v338=v101[2];v99[v338]=v99[v338](v99[v338 + 1 ]);break;end end end elseif (v102==(448 -346)) then v99[v101[2]]= #v99[v101[3]];else local v340=0;local v341;local v342;while true do if (v340==0) then v341=v101[2];v342=v99[v101[3]];v340=1;end if (v340==1) then v99[v341 + 1 ]=v342;v99[v341]=v342[v101[4]];break;end end end v93=v93 + 1 ;break;end if (v109==0) then v101=v89[v93];v102=v101[1];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
